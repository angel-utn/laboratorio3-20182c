--- PARTE 1
CREATE DATABASE PARTE1C
GO
USE PARTE1C
GO
CREATE TABLE PAISES(
	IDPAIS INT NOT NULL PRIMARY KEY,
	PAISES VARCHAR(50) NOT NULL
)
GO
CREATE TABLE EQUIPOS(
	ID BIGINT NOT NULL PRIMARY KEY,
	EQUIPO VARCHAR(100) NOT NULL,
	IDPAIS INT NOT NULL FOREIGN KEY REFERENCES PAISES(IDPAIS)
)
GO
CREATE TABLE PERSONAS(
	IDPERSONA BIGINT NOT NULL PRIMARY KEY,
	APENOM VARCHAR(50) NOT NULL,
	IDEQUIPO BIGINT NULL FOREIGN KEY REFERENCES EQUIPOS(ID)	
)


--- PARTE 2
/*
1​ ​ - ​ ​ Hacer​ ​ un​ ​ trigger​ ​ que​ ​ al​ ​ cargar​ ​ un​ ​ crédito​ ​ verifique​ ​ que​ ​ el​ ​ importe​ ​ del​ ​ mismo​ ​ sumado​ ​ a ​ ​ los 
importes​ ​ de​ ​ los​ ​ créditos​ ​ que​ ​ actualmente​ ​ solicitó​ ​ esa​ ​ persona​ ​ no​ ​ supere​ ​ al​ ​ triple​ ​ de​ ​ la 
declaración​ ​ de​ ​ ganancias.​ ​ Sólo​ ​ deben​ ​ tenerse​ ​ en​ ​ cuenta​ ​ en​ ​ la​ ​ sumatoria​ ​ los​ ​ créditos​ ​ que​ ​ no​ ​ se 
encuentren​ ​ cancelados.​ ​ De​ ​ no​ ​ poder​ ​ otorgar​ ​ el​ ​ crédito​ ​ aclararlo​ ​ con​ ​ un​ ​ mensaje.
*/
CREATE TRIGGER TR_PUNTO1 ON CREDITOS
INSTEAD OF INSERT
AS
BEGIN
	DECLARE @IMPORTE_CREDITO MONEY, @IMPORTE_ACUMULADO MONEY, @DNI BIGINT, @DECLARACION MONEY
	-- OBTENEMOS EL IMPORTE DEL CRÉDITO Y LA PERSONA QUE LO SOLICITÓ
	SELECT @IMPORTE_CREDITO = IMPORTE, @DNI = DNI FROM INSERTED
	-- OBTENEMOS EL IMPORTE ACUMULADO DE CRÉDITOS NO CANCELADOS SOLICITADOS POR LA PERSONA
	SELECT @IMPORTE_ACUMULADO = SUM(IMPORTE) FROM CREDITOS WHERE DNI = @DNI AND CANCELADO = 0
	-- OBTENEMOS LA DECLARACIÓN DE GANANCIAS DE LA PERSONA QUE SOLICITÓ EL CRÉDITO
	SELECT @DECLARACION = DECLARACION_GANANCIAS FROM PERSONAS WHERE DNI = @DNI
	
	IF (@IMPORTE_CREDITO + @IMPORTE_ACUMULADO) > @DECLARACION * 3 BEGIN
		RAISERROR('NO SE PUEDE OTORGAR EL CRÉDITO', 16, 1)	
	END
	ELSE BEGIN
		INSERT INTO CREDITOS (IDBANCO, DNI, FECHA, IMPORTE, PLAZO, CANCELADO)
		SELECT IDBANCO, DNI, FECHA, IMPORTE, PLAZO, 0 FROM INSERTED
	END
END

SELECT * FROM CREDITOS WHERE DNI = 2222
SELECT * FROM PERSONAS WHERE DNI = 2222

-- CREDITO QUE NO ES POSIBLE OTORGAR
INSERT INTO CREDITOS (IDBANCO, DNI, FECHA, IMPORTE, PLAZO, CANCELADO)
VALUES (1, 2222, GETDATE(), 400000, 10, 0)
-- CREDITO OK
INSERT INTO CREDITOS (IDBANCO, DNI, FECHA, IMPORTE, PLAZO, CANCELADO)
VALUES (1, 2222, GETDATE(), 100000, 10, 0)

/*
2​ ​ - ​ ​ Hacer​ ​ un​ ​ trigger​ ​ que​ ​ al​ ​ eliminar​ ​ un​ ​ crédito​ ​ realice​ ​ la​ ​ cancelación​ ​ del​ ​ mismo. 
*/
CREATE TRIGGER TR_PUNTO2 ON CREDITOS
INSTEAD OF DELETE
AS
BEGIN
	UPDATE CREDITOS SET CANCELADO = 0 WHERE IDCREDITO = (SELECT IDCREDITO FROM DELETED)
END

SELECT * FROM CREDITOS
DELETE FROM CREDITOS WHERE IDCREDITO = 2
SELECT * FROM CREDITOS

/*
3​ ​ - ​ ​ Hacer​ ​ un​ ​ trigger​ ​ que​ ​ no​ ​ permita​ ​ otorgar​ ​ créditos​ ​ con​ ​ un​ ​ plazo​ ​ de​ ​ 20
o​ más​ ​ años​ ​ a ​ ​ personas cuya​ ​ declaración​ ​ de​ ​ ganancias​ ​ sea​ ​ menor​ ​ al​ ​ promedio
de​ ​ declaración​ ​ de​ ​ ganancias.  
*/
-- NO PUEDE HABER DOS TRIGGERS DE TIPO INSTEAD SOBRE LA MISMA ACCION EN LA MISMA TABLA
DROP TRIGGER TR_PUNTO1

CREATE TRIGGER TR_PUNTO3 ON CREDITOS
INSTEAD OF INSERT
AS
BEGIN
	DECLARE @PLAZO INT, @DECLARACION MONEY, @PROMEDIO_DECLARACION MONEY, @DNI BIGINT
	
	-- OBTENEMOS EL PLAZO DEL CREDITO Y EL DNI DE LA PERSONA QUE LO SOLICITA
	SELECT @DNI = DNI, @PLAZO = PLAZO FROM INSERTED
	-- OBTENEMOS LA DECLARACIÓN DE GANANCIAS DE LA PERSONA
	SELECT @DECLARACION = DECLARACION_GANANCIAS FROM PERSONAS WHERE DNI = @DNI
	--OBTENEMOS LA DECLARACIÓN DE GANANCIAS PROMEDIO_DECLARACION
	SELECT @PROMEDIO_DECLARACION = AVG(DECLARACION_GANANCIAS) FROM PERSONAS

	IF @PLAZO >= 20 AND @DECLARACION < @PROMEDIO_DECLARACION BEGIN
		RAISERROR('NO SE PUEDE OTORGAR EL CRÉDITO', 16, 1)
	END
	ELSE BEGIN
		INSERT INTO CREDITOS (IDBANCO, DNI, FECHA, IMPORTE, PLAZO, CANCELADO)
		SELECT IDBANCO, DNI, FECHA, IMPORTE, PLAZO, 0 FROM INSERTED
	END
END

SELECT AVG(DECLARACION_GANANCIAS) FROM PERSONAS --387500
SELECT DECLARACION_GANANCIAS FROM PERSONAS WHERE DNI = 2222 --250000
SELECT DECLARACION_GANANCIAS FROM PERSONAS WHERE DNI = 1111 --700000

-- PLAZO >= 20 Y DECLARACION < AL PROMEDIO --> ERROR
INSERT INTO CREDITOS (IDBANCO, DNI, FECHA, IMPORTE, PLAZO, CANCELADO)
VALUES (1, 2222, GETDATE(), 1000, 22, 0)
-- PLAZO < 20 Y DECLARACION < AL PROMEDIO --> OK
INSERT INTO CREDITOS (IDBANCO, DNI, FECHA, IMPORTE, PLAZO, CANCELADO)
VALUES (1, 2222, GETDATE(), 1000, 12, 0)
-- PLAZO >= 20 Y DECLARACION > AL PROMEDIO --> OK
INSERT INTO CREDITOS (IDBANCO, DNI, FECHA, IMPORTE, PLAZO, CANCELADO)
VALUES (1, 1111, GETDATE(), 1000, 22, 0)

/*
4​ ​ - ​ ​ Hacer​ ​ un​ ​ procedimiento​ ​ almacenado​ ​ que​ ​ reciba​ ​ dos​ ​ fechas​ ​ y ​ ​ liste​ ​ todos​ ​ los​ ​ créditos 
otorgados​ ​ entre​ ​ esas​ ​ fechas.​ ​ Debe​ ​ listar​ ​ el​ ​ apellido​ ​ y ​ ​ nombre​ ​ del​ ​ solicitante,​ ​ el​ ​ nombre​ ​ del 
banco,​ ​ el​ ​ tipo​ ​ de​ ​ banco,​ ​ la​ ​ fecha​ ​ del​ ​ crédito​ ​ y ​ ​ el​ ​ importe​ ​ solicitado.
*/
CREATE PROCEDURE SP_PUNTO_4(@INICIO DATE, @FIN DATE)
AS BEGIN
	SELECT P.APELLIDO, P.NOMBRES, B.NOMBRE, B.TIPO, C.FECHA, C.IMPORTE
	FROM CREDITOS AS C
	INNER JOIN PERSONAS AS P ON P.DNI = C.DNI
	INNER JOIN BANCOS AS B ON B.IDBANCO = C.IDBANCO
	WHERE C.FECHA BETWEEN @INICIO AND @FIN
END

EXEC SP_PUNTO_4 '01/01/2012', '01/01/2015'