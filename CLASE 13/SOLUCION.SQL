CREATE TRIGGER TR_MODIFICAR_ESTADO ON CLIENTES
INSTEAD OF DELETE
AS
BEGIN
	UPDATE CLIENTES SET ESTADO = 0 
	WHERE IDCLIENTE = ( SELECT IDCLIENTE FROM DELETED)
END


CREATE TRIGGER TR_NUEVA_CUENTA ON CUENTAS
AFTER INSERT
AS
BEGIN 
DECLARE @IDCUENTA BIGINT
SELECT @IDCUENTA=IDCUENTA FROM INSERTED
 UPDATE CUENTAS SET SALDO=0 
 WHERE IDCUENTA=(SELECT IDCUENTA FROM INSERTED) 
 INSERT INTO TARJETAS(IDCUENTA,TIPO,ESTADO)VALUES(@IDCUENTA,'D',1)
END



ALTER TRIGGER TR_ELIMINAR_CUENTAS ON CUENTAS
INSTEAD OF DELETE
AS
BEGIN
DECLARE @IDCUENTA BIGINT
SELECT @IDCUENTA = IDCUENTA FROM DELETED
DELETE FROM TARJETAS WHERE IDCUENTA = @IDCUENTA
DELETE FROM CUENTAS WHERE IDCUENTA = @IDCUENTA
END

SELECT * FROM TARJETAS
DELETE FROM CUENTAS WHERE IDCUENTA = 5

CREATE TRIGGER TR_NUEVO_MOVIMIENTO ON MOVIMIENTOS
AFTER INSERT
AS
BEGIN
BEGIN TRY
BEGIN TRAN
DECLARE @VALUE MONEY = (SELECT IMPORTE FROM INSERTED)

IF (SELECT TIPO FROM INSERTED) = 'D' BEGIN
	SET @VALUE = @VALUE * -1
END

UPDATE CUENTAS SET SALDO = SALDO + @VALUE
WHERE IDCUENTA = (SELECT IDCUENTA FROM INSERTED)

COMMIT TRAN
END TRY
BEGIN CATCH
IF @@TRANCOUNT > 0 BEGIN
ROLLBACK TRAN
END
RAISERROR('ERROR AL REALIZAR EL MOVIMIENTO', 16, 1)
END CATCH
END

SELECT * FROM MOVIMIENTOS

INSERT INTO MOVIMIENTOS (IDCUENTA, IMPORTE, TIPO, FECHA, ESTADO)
VALUES (3, 301, 'D', GETDATE(), 1)

CREATE TRIGGER TR_NUEVA_TRANSFERENCIA ON TRANSFERENCIAS
AFTER INSERT
AS
BEGIN
	BEGIN TRY
		BEGIN TRANSACTION
			DECLARE @ORIGEN BIGINT
			DECLARE @DESTINO BIGINT
			DECLARE @IMPORTE MONEY
			SELECT @ORIGEN = ORIGEN, @DESTINO = DESTINO, 
			@IMPORTE = IMPORTE	FROM INSERTED
			
			IF @ORIGEN = @DESTINO BEGIN
				RAISERROR('CUENTAS IGUALES', 16, 1)
			END
			-- INSERTAR MOVIMIENTO EN CUENTA ORIGEN
			INSERT INTO MOVIMIENTOS (IDCUENTA, IMPORTE, TIPO, FECHA, ESTADO)
			VALUES (@ORIGEN, @IMPORTE, 'D', GETDATE(), 1)
			
			-- INSERTAR MOVIMIENTO EN CUENTA DESTINO
			INSERT INTO MOVIMIENTOS (IDCUENTA, IMPORTE, TIPO, FECHA, ESTADO)
			VALUES (@DESTINO, @IMPORTE, 'C', GETDATE(), 1)
			
		COMMIT TRANSACTION
	END TRY
	BEGIN CATCH
		IF @@TRANCOUNT > 0 BEGIN
			ROLLBACK TRANSACTION
		END
		RAISERROR('NO SE PUDO REALIZAR LA TRANSFERENCIA', 16, 1)
	END CATCH
END

INSERT INTO TRANSFERENCIAS (ORIGEN, DESTINO, IMPORTE, FECHA, ESTADO)
VALUES (1, 1, 1, GETDATE(), 1)
