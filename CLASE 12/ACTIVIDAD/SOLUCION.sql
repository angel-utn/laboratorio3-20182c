-- VER LAS CUENTAS DE UN CLIENTE
CREATE PROCEDURE SP_VER_CUENTAS(
	@IDCLIENTE BIGINT
)
AS BEGIN
	SELECT * FROM CUENTAS WHERE IDCLIENTE = @IDCLIENTE
END

-- VER MOVIMIENTOS DE UNA CUENTA
CREATE PROCEDURE SP_VER_MOVIMIENTOS (
 @IDCUENTA BIGINT
)
AS BEGIN
	SELECT * FROM MOVIMIENTOS WHERE IDCUENTA = @IDCUENTA
END

-- AGREGAR UNA NUEVA CUENTA

CREATE PROCEDURE SP_AGREGAR_CUENTA(
@IDCUENTA BIGINT,
@IDCLIENTE BIGINT,
@TIPO TINYINT,
@LIMITE MONEY
)AS
BEGIN
IF @TIPO=1
  BEGIN
  --INSERT INTO CUENTAS(IDCUENTA,IDCLIENTE,TIPO,LIMITE,SALDO,ESTADO)
  --VALUES(@IDCUENTA,@IDCLIENTE,1,0,0,1)
  SET @LIMITE = 0
  END
  IF @TIPO=2
  BEGIN
	IF @LIMITE > 0 BEGIN
		SET @LIMITE = @LIMITE * -1
	END  
      --INSERT INTO CUENTAS(IDCUENTA,IDCLIENTE,TIPO,LIMITE,SALDO,ESTADO)
      --VALUES(@IDCUENTA,@IDCLIENTE,2,@LIMITE*-1,0,1)
  END
  
  INSERT INTO CUENTAS(IDCUENTA,IDCLIENTE,TIPO,LIMITE,SALDO,ESTADO)
  VALUES(@IDCUENTA,@IDCLIENTE,@TIPO,@LIMITE,0,1)
END

SP_AGREGAR_CUENTA 7,1,2,-10000

SELECT *FROM CUENTAS


-- AGREGAR UN NUEVO MOVIMIENTO

CREATE PROCEDURE SP_NUEVO_MOVIMIENTO(
	@IDCUENTA BIGINT,
	@TIPO CHAR,
	@IMPORTE MONEY
)
AS
BEGIN
	BEGIN TRY
	BEGIN TRANSACTION
	INSERT INTO MOVIMIENTOS(IDCUENTA, TIPO, IMPORTE, FECHA, ESTADO)
	VALUES (@IDCUENTA, @TIPO, @IMPORTE, GETDATE(), 1)

	IF @TIPO = 'D' BEGIN
		SET @IMPORTE = @IMPORTE * -1	
	END
	UPDATE CUENTAS SET SALDO = SALDO + @IMPORTE
	WHERE IDCUENTA = @IDCUENTA
	COMMIT TRANSACTION
	END TRY
	BEGIN CATCH
		IF @@TRANCOUNT > 0 BEGIN
		ROLLBACK TRANSACTION	
		END
		RAISERROR('NO SE PUDO GUARDAR EL MOVIMIENTO', 16, 1)
	END CATCH
END


SELECT * FROM CUENTAS WHERE IDCUENTA = 3
SELECT * FROM MOVIMIENTOS


SP_VER_MOVIMIENTOS 3

EXEC SP_NUEVO_MOVIMIENTO 3, 'D', 50

--- AGREGAR UNA NUEVA TRANSFERENCIA

CREATE PROCEDURE SP_NUEVA_TRANSFERENCIA(
	@ORIGEN BIGINT,
	@DESTINO BIGINT,
	@IMPORTE MONEY
)
AS
BEGIN
	BEGIN TRY
		BEGIN TRANSACTION
			IF @ORIGEN = @DESTINO BEGIN
				RAISERROR('LAS CUENTAS NO PUEDEN SER IGUALES', 16, 1)
			END
			
			INSERT INTO TRANSFERENCIAS (ORIGEN, DESTINO, IMPORTE, FECHA, ESTADO)
			VALUES (@ORIGEN, @DESTINO, @IMPORTE, GETDATE(), 1)
			
			EXEC SP_NUEVO_MOVIMIENTO @DESTINO, 'C', @IMPORTE
			EXEC SP_NUEVO_MOVIMIENTO @ORIGEN, 'D', @IMPORTE			
			
		COMMIT TRANSACTION
	END TRY
	BEGIN CATCH
		IF @@TRANCOUNT > 0 BEGIN
		ROLLBACK TRANSACTION
		END
		DECLARE @MSJ_ERROR VARCHAR(250)
		SET @MSJ_ERROR = ERROR_MESSAGE()
		RAISERROR(@MSJ_ERROR, 16, 1)
	END CATCH
END


SELECT * FROM CUENTAS
SELECT * FROM TRANSFERENCIAS
SELECT * FROM MOVIMIENTOS

EXEC SP_NUEVA_TRANSFERENCIA 5, 1, 900